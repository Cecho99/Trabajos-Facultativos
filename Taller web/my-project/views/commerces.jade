doctype html
html(lang='en')
  head
    title Food Saver - Comerciante
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css')
    style.
      .header {
        background-color: #4CAF50;
        color: white;
        padding: 1rem 0;
        text-align: center;
      }
      .products {
        padding: 1rem;
      }
      .product-item {
        border: 1px solid #ddd;
        border-radius: 5px;
        overflow: hidden;
        width: calc(25% - 1rem); /* 4 items per row */
        text-align: center;
        box-sizing: border-box;
        padding: 1rem;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
      }
      .product-item img {
        width: 100%;
        height: auto;
        margin-bottom: 1rem;
      }
      .product-item p {
        margin: 0;
      }
      .add-product-form {
        display: none; /* Ocultar el formulario por defecto */
        max-width: 600px; /* Ancho máximo del formulario */
        margin: 1rem auto; /* Centrar horizontalmente y agregar margen superior */
      }
      .table {
        width: 100%; /* Hacer que la tabla ocupe todo el ancho de la página */
      }
      .action-buttons a,
      .action-buttons form {
        display: inline-block;
        margin-right: 5px; /* Agregar un margen entre los botones */
      }
      .table-danger{
        background-color: #f8d7da !important;
      }
  body
    .header
      h1 Bienvenido Comerciante

    nav.navbar.navbar-expand-lg.navbar-light.bg-light
      button.navbar-toggler(type='button', data-toggle='collapse', data-target='#navbarTogglerDemo03', aria-controls='navbarTogglerDemo03', aria-expanded='false', aria-label='Toggle navigation')
        span.navbar-toggler-icon
      a.navbar-brand(href='/commerces') Productos

      .collapse.navbar-collapse#navbarTogglerDemo03
        ul.navbar-nav.mr-auto.mt-2.mt-lg-0
          li.nav-item.active
            a.nav-link#toggleFormBtn(href='#') Agregar Producto
              span.sr-only (current)
          li.nav-item.active
            a.nav-link#toggleFormBtn(href='/commerces/compras') Historial de ventas
              span.sr-only (current)
         
     
        form.form-inline.my-2.my-lg-0.mx-auto(id='productFilterForm') 
          input.form-control.mr-sm-2.search-bar(type='search', placeholder='Buscar', aria-label='Buscar', id='productNameInput', style='width: 400px;')
          button.btn.btn-outline-success.my-2.my-sm-0(type='button', id='filterButton') Buscar

        ul.navbar-nav.ml-auto
          li.nav-item.dropdown
            a#navbarDropdown.nav-link.dropdown-toggle(href='#', role='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
              | #{user.name}
            .dropdown-menu.dropdown-menu-right(aria-labelledby='navbarDropdown')
              a.dropdown-item(href='/') Cerrar Sesión

   main.products
      if products && products.length
        table.table.table-striped
          thead
            tr
              th Imagen
              th Nombre
              th Precio
              th Stock
              th Descripción
              th Acciones
          tbody
            each product in products
              - var expirationDate = new Date(product.caduceDate)
              - var today = new Date()
              tr(data-product-id=product._id, class=expirationDate < today ? 'table-danger' : '')
                td: img(src=product.photo, alt=product.name, width="50")
                td.editable-field(data-field='name')= product.name
                td.editable-field(data-field='price')= product.price
                td.editable-field(data-field='stock')= product.stock
                td.editable-field(data-field='description')= product.description
                td.action-buttons
                  if expirationDate > today
                    button.btn.btn-secondary.edit-btn(type='button') Editar
                    | &nbsp; <!-- Espacio entre botones -->
                  form(action=`/commerces/${product._id}?_method=DELETE`, method='POST', style='display:inline;')
                    button.btn.btn-danger(type='submit') Eliminar
      else
        p No hay productos disponibles

    .add-product-form
      h2 Agregar Producto

      form(action='/commerces', method='POST', enctype='multipart/form-data')
        .form-group
          label(for='name') Nombre del Producto
          input#name.form-control(type='text', name='name', placeholder='Nombre del Producto', required)
          
        .form-group
          label(for='price') Precio
          input#price.form-control(type='number', name='price', placeholder='Precio', required)
          
        .form-group
          label(for='caduceDate') Fecha de Caducidad
          input#caduceDate.form-control(type='date', name='caduceDate', placeholder='Fecha de Caducidad', required)

        .form-group
          label(for='type') Tipo
          .d-flex.flex-wrap
            each type in ['lácteos', 'huevos', 'frutas', 'verduras', 'carnes', 'pollo', 'pescados y mariscos', 'panaderia', 'pasteleria', 'harina', 'levadura', 'mezclas para hornear', 'bebidas', 'congelados', 'enlatados', 'pastas', 'arroces', 'snacks', 'cereales','dulces', 'mermeladas', 'miel', 'azúcar', 'condimentos', 'salsas', 'aderezos', 'aceite', 'vinagre', 'té', 'café']
              .form-check.mx-2.mb-2
                input.form-check-input(type='checkbox', id=type, name='type[]', value=type)
                label.form-check-label(for=type)= type

        .form-group
          label(for='freeGluten') Producto libre de gluten (sin TAAC)
          select#freeGluten.form-control(name='freeGluten', required)
            option(value='true') Sí
            option(value='false') No

        .form-group
          label(for='stock') Stock
          input#stock.form-control(type='number', name='stock', placeholder='Stock', required)
          
        .form-group
          label(for='description') Descripción
          textarea#description.form-control(name='description', rows='3', placeholder='Descripción del Producto')
          
        .form-group
          label(for='photo') Foto del Producto
          input#photo.form-control(type='file', name='photo', required)
                    
        button.btn.btn-primary(type='submit') Agregar Producto

  script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js')
  script(src='https://code.jquery.com/jquery-3.3.1.min.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js')
  script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js')

  script.
    $(document).ready(function() {
      $('#toggleFormBtn').click(function(e) {
        e.preventDefault(); // Evitar el comportamiento predeterminado del enlace
        $('.add-product-form').toggle(); // Alternar la visibilidad del formulario al hacer clic en el botón
        $('table, p').toggle(); // Alternar la visibilidad de la tabla de productos y el mensaje de "No hay productos disponibles"
        $('#productFilterForm').toggle(); // Alternar la visibilidad del formulario de búsqueda
      });
    });

  script.
    $('#filterButton').click(function() {
        var searchTerm = $('#productNameInput').val().toLowerCase();
        $('tbody tr').each(function() {
          var productName = $(this).find('[data-field="name"]').text().toLowerCase();
          var productPrice = $(this).find('[data-field="price"]').text().toLowerCase();
          var productStock = $(this).find('[data-field="stock"]').text().toLowerCase();
          var productDescription = $(this).find('[data-field="description"]').text().toLowerCase();
          if (productName.includes(searchTerm) || productPrice.includes(searchTerm) || productStock.includes(searchTerm) || productDescription.includes(searchTerm)) {
            $(this).show();
          } else {
            $(this).hide();
          }
        });
      });
      
  
  script.
    $(document).ready(function() {
      var originalValues = {}; // Definir originalValues fuera del alcance de los eventos

      // Función para activar la edición de campos
      $('.edit-btn').click(function() {
        var tableRow = $(this).closest('tr');

        // Guardar los valores originales para poder restaurarlos al cancelar
        originalValues = {};
        tableRow.find('.editable-field').each(function() {
          var fieldName = $(this).data('field');
          var fieldValue = $(this).text().trim();
          originalValues[fieldName] = fieldValue;
        });

        // Convertir los campos a inputs para editar
        tableRow.find('.editable-field').each(function() {
          var fieldValue = $(this).text().trim();
          $(this).html(`<input type="text" class="form-control" value="${fieldValue}">`);
        });

        // Ocultar el botón de Eliminar
        tableRow.find('.btn-danger').hide();

        // Mostrar botones de Guardar y Cancelar
        tableRow.find('.action-buttons').append(`
          <button class="btn btn-primary save-btn" type="button">Guardar</button>
          <button class="btn btn-secondary cancel-btn" type="button">Cancelar</button>
        `);

        $(this).hide(); // Ocultar el botón Editar
      });

      // Función para cancelar la edición y restaurar los valores originales
      $(document).on('click', '.cancel-btn', function() {
        var tableRow = $(this).closest('tr');

        // Restaurar los valores originales guardados previamente
        tableRow.find('.editable-field').each(function() {
          var fieldName = $(this).data('field');
          var originalValue = originalValues[fieldName];
          $(this).html(originalValue);
        });

        tableRow.find('.edit-btn').show();
        tableRow.find('.save-btn, .cancel-btn').remove();
        tableRow.find('.btn-danger').show();
      });


      $(document).on('click', '.save-btn', function() {
        var tableRow = $(this).closest('tr');
        var productId = tableRow.data('product-id').replace(/['"]+/g, '');
        var updatedData = {};

        tableRow.find('.editable-field').each(function() {
          var fieldName = $(this).data('field');
          var fieldValue = $(this).find('input').val();
          updatedData[fieldName] = fieldValue;
        });

        $.ajax({
          url: `/commerces/${productId}`,
          method: 'PUT',
          data: $.param(updatedData),
          contentType: 'application/x-www-form-urlencoded',
        });


        tableRow.find('.editable-field').each(function() {
          var fieldName = $(this).data('field');
          $(this).html(updatedData[fieldName]);
        });

        tableRow.find('.edit-btn').show();
        tableRow.find('.save-btn, .cancel-btn').remove();
        tableRow.find('.btn-danger').show();
      });
    });

